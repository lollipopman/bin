#!/bin/bash
# vim: set noexpandtab:

PROGRAM=$(basename "${0}")

if [[ -z "$1" ]] || [[ -z "$2" ]]; then
	printf "usage: %s <from_date> <to_date>\n" "${PROGRAM}"
	printf "e.g. %s 2016-01-01 2016-01-31\n" "${PROGRAM}"
	exit 0
fi

TRANSACTIONS=$(mktemp /tmp/tmp.mint.XXXXXX)
if ! mintapi --transactions jesse@mbuki-mvuki.org >"${TRANSACTIONS}"; then
	printf "\n\nUnable to pull down transactions from mint!\n\n"
	exit 1
fi

FROM_DATE=$(($(date --date="$1" +%s) * 1000))
TO_DATE=$(($(date --date="$2" +%s) * 1000))
TOTAL=$(jq '
    map(
      select(.description == "Ventra" and .date > '${FROM_DATE}' and .date < '${TO_DATE}').amount)
    ) | add' "${TRANSACTIONS}")

function tx_to_markdown() {
	printf "## Transactions\n\n"
	printf "Date|Description|Amount\n"
	printf -- "---|---|---\n"
	jq -r '
      map(
        select(.description == "Ventra" and .date > '${FROM_DATE}' and .date < '${TO_DATE}')
      ) | map(
            .date /= 1000
          ) | map(.date = ((.date) |
            tostring |strptime("%s") |
            strftime("%F"))) |
            map([.date, .description, .amount ]) |
            .[]|@tsv' "${TRANSACTIONS}" |
		tr '\t' '|' |
		sort -n
	printf "\n## Total: \$%s\n" "${TOTAL}"
}

output_pdf="${HOME}/tmp/${PROGRAM}-${1}-${2}.pdf"
if tx_to_markdown | pandoc -f gfm -o "${output_pdf}"; then
	printf "PDF Created: %s\n" "${output_pdf}"
else
	printf "Unable to create PDF: %s\n" "${output_pdf}"
	exit 1
fi
